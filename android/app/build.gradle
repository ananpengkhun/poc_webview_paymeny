plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'tech.ainu.android.lic'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.krungsri.kma"
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    buildFeatures {
        viewBinding true
        buildConfig true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.krungsri.kma"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
        minSdkVersion 28
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
            ext.set("ainu.secretKey", "X7pNrmAqctUe9VdevGCwE8zxe5tVs6hm")
            ext.set("ainu.env", "uat")
            ext.set("ainu.hashedID", "true")
            ext.set("ainu.aarFiles", "$projectDir/../libs/AinuLiveness.aar")
        }

        debug {
            debuggable true
            signingConfig signingConfigs.debug
            ext.set("ainu.secretKey", "X7pNrmAqctUe9VdevGCwE8zxe5tVs6hm")
            ext.set("ainu.env", "uat")
            ext.set("ainu.hashedID", "true")
            ext.set("ainu.aarFiles", "$projectDir/../libs/AinuLiveness.aar")
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'androidx.camera:camera-camera2:1.4.1'
    implementation 'androidx.camera:camera-lifecycle:1.4.1'

    implementation 'com.android.support.constraint:constraint-layout:2.0.4'
    implementation 'androidx.biometric:biometric:1.1.0'
    implementation 'androidx.window:window:1.0.0'
    implementation 'androidx.window:window-java:1.0.0'
    implementation 'com.google.android.play:integrity:1.3.0'
    implementation 'com.tom-roush:pdfbox-android:2.0.27.0'

    implementation 'com.google.android.material:material:1.12.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation 'androidx.core:core-ktx:1.8.0'
    implementation 'androidx.appcompat:appcompat:1.7.0'

    //camera
    implementation "androidx.camera:camera-camera2:1.3.4"
    implementation "androidx.camera:camera-lifecycle:1.3.4"
    implementation "androidx.camera:camera-view:1.3.4"

    // animation
    implementation 'com.airbnb.android:lottie:3.7.0'

    // liveness
    implementation('org.tensorflow:tensorflow-lite:2.14.0') { changing = true }

    //liveness
    implementation files('../libs/AinuLiveness.aar')
}
